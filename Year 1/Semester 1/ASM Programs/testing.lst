     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll                              ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
     9                                  import printf msvcrt.dll
    10                                  ; our data is declared here (the variables needed by our program)
    11                                  segment data use32 class=data
    12 00000000 0A6276637820                    a db 10, "bvcx "
    13                                          
    14 00000006 617362666420736720-             b db "asbfd sg ! fds  gdg", 0
    14 0000000F 212066647320206764-
    14 00000018 6700               
    15 0000001A 257300                          format db "%s",0
    16 0000001D 206173626664736700              c db " asbfdsg", 0
    17                                          
    18 00000026 6861686100                      message db "haha", 0
    19                                          
    20 0000002B <res 0000000F>                  nr resb 15
    21                                  
    22 0000003A 20203100                        print_1 db "  1", 0
    23 0000003E 3000                            print_0 db "0", 0
    24                                  ; our code starts here
    25                                  segment code use32 class=code
    26                                      start:
    27                                          
    28 00000000 68[06000000]                    push dword b
    29 00000005 68[1A000000]                    push dword format
    30 0000000A FF15[00000000]                  call [printf]
    31 00000010 83C408                          add esp, 4*2
    32                                          
    33                                      
    34 00000013 B9[2B000000]                    mov ecx, nr
    35                                          
    36 00000018 B0AB                            mov al, 0abh
    37 0000001A 6699                            cwd
    38                                          
    39 0000001C B30A                            mov bl, 10
    40                                          
    41 0000001E F6FB                            idiv bl
    42                                          
    43 00000020 C605[2B000000]2D                mov byte [nr], "-"
    44 00000027 41                              inc ecx
    45                                          
    46 00000028 B310                            mov bl, 16
    47                                          
    48                                          
    49 0000002A C0E004                          shl al, 4
    50 0000002D C0E804                          shr al, 4
    51 00000030 28C3                            sub bl, al
    52                                          
    53 00000032 88D8                            mov al, bl
    54                                          
    55 00000034 0430                            add al, '0'
    56                                          
    57 00000036 B310                            mov bl, 16
    58                                          
    59 00000038 C0E404                          shl ah, 4
    60 0000003B C0EC04                          shr ah, 4
    61 0000003E 28E3                            sub bl, ah
    62                                          
    63 00000040 88DC                            mov ah, bl
    64                                          
    65 00000042 80C430                          add ah, '0'
    66                                          
    67 00000045 8801                            mov byte [ecx], al
    68 00000047 41                              inc ecx
    69                                          
    70 00000048 8821                            mov byte [ecx], ah
    71 0000004A 41                              inc ecx
    72                                          
    73                                          
    74                                          
    75                                          
    76                                      
    77 0000004B 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    78 0000004D FF15[00000000]                  call    [exit]       ; call exit to terminate the program
