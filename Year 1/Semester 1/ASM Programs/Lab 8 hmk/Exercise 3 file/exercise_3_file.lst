     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fclose, printf, fread             
     8                                  import exit msvcrt.dll      
     9                                  import fopen msvcrt.dll      
    10                                  import fclose msvcrt.dll      
    11                                  import printf msvcrt.dll    
    12                                  import fread msvcrt.dll    
    13                                  
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16 00000000 66696C652E74787400              file_name db "file.txt", 0
    17 00000009 7200                            read_mode db "r", 0
    18 0000000B FFFFFFFF                        file_descriptor dd -1
    19 0000000F 546865206E756D6265-             text db "The number of even digits in the file is: %d", 0
    19 00000018 72206F66206576656E-
    19 00000021 206469676974732069-
    19 0000002A 6E207468652066696C-
    19 00000033 652069733A20256400 
    20 0000003C 00000000                        even_digits_number dd 0
    21 00000040 <res 00000001>                  digit resb 1
    22                                  
    23                                  ; our code starts here
    24                                  segment code use32 class=code
    25                                      start:
    26                                          ; A text file is given. Read the content of the file, count the number of even digits and display the result on the screen. The name of text file is defined in the data segment.
    27                                          
    28                                          ; opening the file
    29                                          ; FILE * fopen(const char* file_name, const char * access_mode)
    30 00000000 68[09000000]                    push dword read_mode
    31 00000005 68[00000000]                    push dword file_name
    32 0000000A FF15[00000000]                  call [fopen]
    33 00000010 83C408                          add esp, 4 * 2
    34                                          
    35 00000013 A3[0B000000]                    mov [file_descriptor], eax
    36                                          
    37                                          ; check if it opened correctly
    38 00000018 83F800                          cmp eax, 0
    39 0000001B 7465                            je final
    40                                          
    41                                          loop_read:
    42                                              
    43                                              ;int fread(void * str, int size, int count, FILE * stream)
    44                                              ; reading a digit from the file
    45 0000001D FF35[0B000000]                      push dword [file_descriptor]
    46 00000023 6A01                                push dword 1
    47 00000025 6A01                                push dword 1
    48 00000027 68[40000000]                        push dword digit
    49 0000002C FF15[00000000]                      call [fread]
    50 00000032 83C410                              add esp, 4 * 4
    51                                              
    52                                              ; checking if i am at the end of the file
    53 00000035 83F800                              cmp eax, 0
    54 00000038 7425                                je close
    55                                              
    56                                              ; checking if the byte that was read is a digit or not
    57 0000003A 803D[40000000]30                    cmp byte [digit], '0'
    58 00000041 7CDA                                jl loop_read
    59                                              
    60 00000043 803D[40000000]39                    cmp byte [digit], '9'
    61 0000004A 7FD1                                jg loop_read
    62                                              
    63                                              ; cheking if it s an even digit
    64 0000004C A0[40000000]                        mov al, [digit]
    65 00000051 F8                                  clc
    66 00000052 D0D8                                rcr al, 1
    67                                              ; if it s not an even number, jump
    68 00000054 73C7                                jae loop_read
    69                                              
    70 00000056 8305[3C000000]01                    add dword [even_digits_number], 1
    71                                              
    72                                          
    73                                          
    74                                          
    75 0000005D EBBE                            jmp loop_read
    76                                          
    77                                          
    78                                          close:
    79                                          
    80                                          ;int printf(const char * format, variable_1, constant_2, ...);
    81                                          ; printing the result on the screen
    82 0000005F FF35[3C000000]                  push dword [even_digits_number]
    83 00000065 68[0F000000]                    push dword text
    84 0000006A FF15[00000000]                  call [printf]
    85 00000070 83C408                          add esp, 4 * 2
    86                                          
    87                                          
    88                                          ;int fclose(FILE * descriptor)
    89                                          ; closing the opened file
    90 00000073 FF35[0B000000]                  push dword [file_descriptor]
    91 00000079 FF15[00000000]                  call [fclose]
    92 0000007F 83C404                          add esp, 4 * 1
    93                                          
    94                                          
    95                                          
    96                                          
    97                                          
    98                                          
    99                                          
   100                                          final:
   101                                          
   102                                          ; exit(0)
   103 00000082 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   104 00000084 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
