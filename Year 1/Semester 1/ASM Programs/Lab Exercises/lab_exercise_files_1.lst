     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fread, fwrite, fopen, fclose               
     8                                  import exit msvcrt.dll                   
     9                                  import fread msvcrt.dll                   
    10                                  import fwrite msvcrt.dll                   
    11                                  import fopen msvcrt.dll                   
    12                                  import fclose msvcrt.dll    
    13                                  
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16 00000000 00000000                       fd1 dd 0
    17 00000004 612E74787400                   file_name db "a.txt", 0
    18 0000000A 722B000000000000               rmode dd "r+", 0
    19 00000012 7700                           wmode db "w", 0
    20 00000014 00000000                       data1 dd 0
    21                                         
    22                                  
    23                                  ; our code starts here
    24                                  segment code use32 class=code
    25                                      start:
    26                                          
    27                                          ; FILE *fopen(const char *filename, const char *mode)
    28 00000000 68[0A000000]                    push dword rmode
    29 00000005 68[04000000]                    push dword file_name
    30 0000000A FF15[00000000]                  call [fopen]
    31 00000010 83C408                          add esp, 4 * 2
    32                                          
    33 00000013 83F800                          cmp eax, 0
    34 00000016 7460                            je fin
    35                                          
    36 00000018 A3[00000000]                    mov [fd1], eax
    37                                          
    38                                          loop1:
    39                                              
    40                                              ;size_t fread(void *ptr, size_t size, size_t nmemb, FILE *stream)
    41 0000001D FF35[00000000]                      push dword [fd1]
    42 00000023 6A64                                push dword 100
    43 00000025 6A01                                push dword 1
    44 00000027 68[14000000]                        push dword data1
    45 0000002C FF15[00000000]                      call [fread]
    46 00000032 83C410                              add esp, 4 * 4
    47                                              
    48 00000035 83F864                              cmp eax, 064h
    49 00000038 742F                                je fin_1
    50                                              
    51 0000003A 89C1                                mov ecx, eax
    52                                              
    53                                              loop2:
    54                                              
    55 0000003C 8081[13000000]01                        add [data1 + ecx - 1], byte 1
    56                                              
    57 00000043 E2F7                                loop loop2
    58                                              
    59 00000045 89C1                                mov ecx, eax
    60                                              
    61 00000047 BB[14000000]                        mov ebx, data1
    62                                              
    63                                              loop3:
    64                                                  
    65                                                  
    66 0000004C 83C301                                  add ebx, 1
    67                                                  
    68 0000004F 60                                      pushad
    69                                                  
    70                                                  
    71                                                  ;size_t fwrite(const void *ptr, size_t size, size_t nmemb, FILE *stream)
    72 00000050 FF35[00000000]                          push dword [fd1]
    73 00000056 6A01                                    push dword 1
    74 00000058 6A01                                    push dword 1
    75 0000005A 53                                      push dword ebx
    76 0000005B FF15[00000000]                          call [fwrite]
    77 00000061 83C410                                  add esp, 4 * 4
    78                                                  
    79 00000064 61                                      popad
    80                                                  
    81 00000065 E2E5                                loop loop3
    82                                          
    83 00000067 EBB4                            jmp loop1
    84                                          
    85                                          
    86                                          
    87                                          fin_2:
    88                                          
    89                                          
    90                                          fin_1:
    91                                          
    92                                          ;int fclose(FILE *stream)
    93 00000069 FF35[00000000]                  push dword [fd1]
    94 0000006F FF15[00000000]                  call [fclose]
    95 00000075 83C404                          add esp, 4 * 1
    96                                          
    97                                          
    98                                          fin:
    99                                      
   100                                          ; exit(0)
   101 00000078 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   102 0000007A FF15[00000000]                  call    [exit]       ; call exit to terminate the program
