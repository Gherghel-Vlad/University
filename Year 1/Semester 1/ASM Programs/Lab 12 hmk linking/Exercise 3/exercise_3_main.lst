     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll 
     9                                  import printf msvcrt.dll    
    10                                  
    11                                  ; extern concatenate_digits
    12                                  
    13                                  
    14                                  
    15                                  ; our data is declared here (the variables needed by our program)
    16                                  segment data use32 class=data
    17 00000000 617333346466353667-             string_1 db "as34df56gh70", 0
    17 00000009 68373000           
    18 0000000D 676866313168676635-             string_2 db "ghf11hgf546", 0
    18 00000016 343600             
    19 00000019 <res 00000064>                  result_1 resb 100
    20 0000007D <res 00000064>                  result_2 resb 100
    21 000000E1 466972737420726573-             format_1_string db "First result: %s",13, 10, 0
    21 000000EA 756C743A2025730D0A-
    21 000000F3 00                 
    22 000000F4 5365636F6E64207265-             format_2_string db "Second result: %s", 0
    22 000000FD 73756C743A20257300 
    23                                          
    24                                  
    25                                  ; our code starts here
    26                                  segment code use32 class=code
    27                                      
    28                                  concatenate_digits:
    29                                      ; concatenate_digits(result, string1, string2)
    30                                      ; edi will represent the result location
    31 00000000 8B7C2404                    mov edi, [esp + 4]
    32 00000004 8B74240C                    mov esi, [esp + 12] ; esi = string2
    33                                      
    34                                      ; taking and concatenating the decimal characters from the string2 to the result string
    35                                      repeta1:
    36 00000008 AC                              lodsb
    37                                          ; checking if it didnt reach the end of the string2
    38 00000009 3C00                            cmp al, 0
    39 0000000B 740B                            je done1
    40                                          
    41                                          ; checking if it s a digit
    42 0000000D 3C30                            cmp al, '0'
    43 0000000F 7C05                            jl NotADigit1
    44 00000011 3C39                            cmp al, '9'
    45 00000013 7F01                            jg NotADigit1
    46                                          
    47                                          ; if it went past those 2 checks, it means it s a digit and i can concatenate it to the result string
    48 00000015 AA                              stosb
    49                                          
    50                                          NotADigit1:
    51                                      
    52 00000016 EBF0                        jmp repeta1
    53                                      done1:
    54                                      
    55                                      ; taking and concatenating the decimal characters from the string1 to the result string
    56 00000018 8B742408                    mov esi, [esp+8]
    57                                      repeta2:
    58 0000001C AC                              lodsb
    59                                          ; checking if it didnt reach the end of the string1
    60 0000001D 3C00                            cmp al, 0
    61 0000001F 740B                            je done2
    62                                          
    63                                          ; checking if it s a digit
    64 00000021 3C30                            cmp al, '0'
    65 00000023 7C05                            jl NotADigit2
    66 00000025 3C39                            cmp al, '9'
    67 00000027 7F01                            jg NotADigit2
    68                                          
    69                                          ; if it went past those 2 checks, it means it s a digit and i can concatenate it to the result string
    70 00000029 AA                              stosb
    71                                          
    72                                          NotADigit2:
    73                                      
    74 0000002A EBF0                        jmp repeta2
    75                                      done2:
    76                                      
    77                                  
    78 0000002C C20C00                      ret 3*4 ; clearing 3 doublwords because i sent 3 addresses (the result string adress and the strings adresses) 
    79                                      
    80                                      
    81                                  
    82                                      start:
    83                                         
    84                                         ; concatenate_digits(result, string1, string2)
    85                                         
    86 0000002F 68[0D000000]                   push dword string_2
    87 00000034 68[00000000]                   push dword string_1
    88 00000039 68[19000000]                   push dword result_1
    89 0000003E E8BDFFFFFF                     call concatenate_digits
    90                                         
    91 00000043 68[00000000]                   push dword string_1
    92 00000048 68[0D000000]                   push dword string_2
    93 0000004D 68[7D000000]                   push dword result_2
    94 00000052 E8A9FFFFFF                     call concatenate_digits
    95                                         
    96 00000057 68[19000000]                   push dword result_1
    97 0000005C 68[E1000000]                   push dword format_1_string
    98 00000061 FF15[00000000]                 call [printf]
    99 00000067 83C408                         add esp, 4*2
   100                                          
   101                                         
   102 0000006A 68[7D000000]                   push dword result_2
   103 0000006F 68[F4000000]                   push dword format_2_string
   104 00000074 FF15[00000000]                 call [printf]
   105 0000007A 83C408                         add esp, 4*2
   106                                      
   107                                          ; exit(0)
   108 0000007D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   109 0000007F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
