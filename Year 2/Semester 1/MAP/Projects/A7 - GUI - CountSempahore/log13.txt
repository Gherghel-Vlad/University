Id: 1
ExeStack:
 rHExp(v1));(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(print(rHExp(v1));release(cnt)))) );(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))) );(acquire(cnt);(print(rHExp(v1)-1);release(cnt)))))))))
(Ref(int) v1;(int cnt;(new(v1. 1);(createSemaphore(cnt
SymTable:

Out:

FileTable:

Heap:

Semaphore:



----------------------------------------------------------------------


Id: 1
ExeStack:
 Ref(int) v1
 rHExp(v1));(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(print(rHExp(v1));release(cnt)))) );(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))) );(acquire(cnt);(print(rHExp(v1)-1);release(cnt))))))))
(int cnt;(new(v1. 1);(createSemaphore(cnt
SymTable:

Out:

FileTable:

Heap:

Semaphore:



----------------------------------------------------------------------


Id: 1
ExeStack:
 Ref(int) v1
 rHExp(v1));(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(print(rHExp(v1));release(cnt)))) );(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))) );(acquire(cnt);(print(rHExp(v1)-1);release(cnt))))))))
(int cnt;(new(v1. 1);(createSemaphore(cnt
SymTable:

Out:

FileTable:

Heap:

Semaphore:



----------------------------------------------------------------------


Id: 1
ExeStack:
 rHExp(v1));(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(print(rHExp(v1));release(cnt)))) );(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))) );(acquire(cnt);(print(rHExp(v1)-1);release(cnt))))))))
(int cnt;(new(v1. 1);(createSemaphore(cnt
SymTable:
v1 --> 0.int
Out:

FileTable:

Heap:

Semaphore:



----------------------------------------------------------------------


Id: 1
ExeStack:
 rHExp(v1));(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(print(rHExp(v1));release(cnt)))) );(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))) );(acquire(cnt);(print(rHExp(v1)-1);release(cnt))))))))
(int cnt;(new(v1. 1);(createSemaphore(cnt
SymTable:
v1 --> 0.int
Out:

FileTable:

Heap:

Semaphore:



----------------------------------------------------------------------


Id: 1
ExeStack:
 int cnt
 rHExp(v1));(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(print(rHExp(v1));release(cnt)))) );(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))) );(acquire(cnt);(print(rHExp(v1)-1);release(cnt)))))))
(new(v1. 1);(createSemaphore(cnt
SymTable:
v1 --> 0.int
Out:

FileTable:

Heap:

Semaphore:



----------------------------------------------------------------------


Id: 1
ExeStack:
 int cnt
 rHExp(v1));(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(print(rHExp(v1));release(cnt)))) );(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))) );(acquire(cnt);(print(rHExp(v1)-1);release(cnt)))))))
(new(v1. 1);(createSemaphore(cnt
SymTable:
v1 --> 0.int
Out:

FileTable:

Heap:

Semaphore:



----------------------------------------------------------------------


Id: 1
ExeStack:
 rHExp(v1));(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(print(rHExp(v1));release(cnt)))) );(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))) );(acquire(cnt);(print(rHExp(v1)-1);release(cnt)))))))
(new(v1. 1);(createSemaphore(cnt
SymTable:
cnt --> 0
v1 --> 0.int
Out:

FileTable:

Heap:

Semaphore:



----------------------------------------------------------------------


Id: 1
ExeStack:
 rHExp(v1));(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(print(rHExp(v1));release(cnt)))) );(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))) );(acquire(cnt);(print(rHExp(v1)-1);release(cnt)))))))
(new(v1. 1);(createSemaphore(cnt
SymTable:
cnt --> 0
v1 --> 0.int
Out:

FileTable:

Heap:

Semaphore:



----------------------------------------------------------------------


Id: 1
ExeStack:
 new(v1. 1)
 rHExp(v1));(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(print(rHExp(v1));release(cnt)))) );(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))) );(acquire(cnt);(print(rHExp(v1)-1);release(cnt))))))
(createSemaphore(cnt
SymTable:
cnt --> 0
v1 --> 0.int
Out:

FileTable:

Heap:

Semaphore:



----------------------------------------------------------------------


Id: 1
ExeStack:
 new(v1. 1)
 rHExp(v1));(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(print(rHExp(v1));release(cnt)))) );(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))) );(acquire(cnt);(print(rHExp(v1)-1);release(cnt))))))
(createSemaphore(cnt
SymTable:
cnt --> 0
v1 --> 0.int
Out:

FileTable:

Heap:

Semaphore:



----------------------------------------------------------------------


Id: 1
ExeStack:
 rHExp(v1));(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(print(rHExp(v1));release(cnt)))) );(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))) );(acquire(cnt);(print(rHExp(v1)-1);release(cnt))))))
(createSemaphore(cnt
SymTable:
cnt --> 0
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 1
Semaphore:



----------------------------------------------------------------------


Id: 1
ExeStack:
 rHExp(v1));(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(print(rHExp(v1));release(cnt)))) );(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))) );(acquire(cnt);(print(rHExp(v1)-1);release(cnt))))))
(createSemaphore(cnt
SymTable:
cnt --> 0
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 1
Semaphore:



----------------------------------------------------------------------


Id: 1
ExeStack:
 rHExp(v1))
 createSemaphore(cnt
(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(print(rHExp(v1));release(cnt)))) );(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))) );(acquire(cnt);(print(rHExp(v1)-1);release(cnt)))))
SymTable:
cnt --> 0
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 1
Semaphore:



----------------------------------------------------------------------


Id: 1
ExeStack:
 rHExp(v1))
 createSemaphore(cnt
(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(print(rHExp(v1));release(cnt)))) );(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))) );(acquire(cnt);(print(rHExp(v1)-1);release(cnt)))))
SymTable:
cnt --> 0
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 1
Semaphore:



----------------------------------------------------------------------


Id: 1
ExeStack:
(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(print(rHExp(v1));release(cnt)))) );(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))) );(acquire(cnt);(print(rHExp(v1)-1);release(cnt)))))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 1
Semaphore:
1 --> 1 --> []


----------------------------------------------------------------------


Id: 1
ExeStack:
(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(print(rHExp(v1));release(cnt)))) );(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))) );(acquire(cnt);(print(rHExp(v1)-1);release(cnt)))))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 1
Semaphore:
1 --> 1 --> []


----------------------------------------------------------------------


Id: 1
ExeStack:
 fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(print(rHExp(v1));release(cnt)))) )
(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))) );(acquire(cnt);(print(rHExp(v1)-1);release(cnt))))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 1
Semaphore:
1 --> 1 --> []


----------------------------------------------------------------------


Id: 1
ExeStack:
 fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(print(rHExp(v1));release(cnt)))) )
(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))) );(acquire(cnt);(print(rHExp(v1)-1);release(cnt))))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 1
Semaphore:
1 --> 1 --> []


----------------------------------------------------------------------


Id: 1
ExeStack:
(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))) );(acquire(cnt);(print(rHExp(v1)-1);release(cnt))))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 1
Semaphore:
1 --> 1 --> []


----------------------------------------------------------------------


Id: 2
ExeStack:
(acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(print(rHExp(v1));release(cnt))))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 1
Semaphore:
1 --> 1 --> []


----------------------------------------------------------------------


Id: 1
ExeStack:
(fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))) );(acquire(cnt);(print(rHExp(v1)-1);release(cnt))))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 1
Semaphore:
1 --> 1 --> []


----------------------------------------------------------------------


Id: 2
ExeStack:
(acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(print(rHExp(v1));release(cnt))))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 1
Semaphore:
1 --> 1 --> []


----------------------------------------------------------------------


Id: 1
ExeStack:
 fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))) )
(acquire(cnt);(print(rHExp(v1)-1);release(cnt)))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 1
Semaphore:
1 --> 1 --> []


----------------------------------------------------------------------


Id: 2
ExeStack:
 acquire(cnt)
(wHStmt(v1. rHExp(v1)*10);(print(rHExp(v1));release(cnt)))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 1
Semaphore:
1 --> 1 --> []


----------------------------------------------------------------------


Id: 1
ExeStack:
 fork( (acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))) )
(acquire(cnt);(print(rHExp(v1)-1);release(cnt)))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 1
Semaphore:
1 --> 1 --> []


----------------------------------------------------------------------


Id: 2
ExeStack:
 acquire(cnt)
(wHStmt(v1. rHExp(v1)*10);(print(rHExp(v1));release(cnt)))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 1
Semaphore:
1 --> 1 --> []


----------------------------------------------------------------------


Id: 1
ExeStack:
(acquire(cnt);(print(rHExp(v1)-1);release(cnt)))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 1
Semaphore:
1 --> 1 --> [2]


----------------------------------------------------------------------


Id: 2
ExeStack:
(wHStmt(v1. rHExp(v1)*10);(print(rHExp(v1));release(cnt)))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 1
Semaphore:
1 --> 1 --> [2]


----------------------------------------------------------------------


Id: 3
ExeStack:
(acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt)))))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 1
Semaphore:
1 --> 1 --> [2]


----------------------------------------------------------------------


Id: 1
ExeStack:
(acquire(cnt);(print(rHExp(v1)-1);release(cnt)))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 1
Semaphore:
1 --> 1 --> [2]


----------------------------------------------------------------------


Id: 2
ExeStack:
(wHStmt(v1. rHExp(v1)*10);(print(rHExp(v1));release(cnt)))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 1
Semaphore:
1 --> 1 --> [2]


----------------------------------------------------------------------


Id: 3
ExeStack:
(acquire(cnt);(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt)))))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 1
Semaphore:
1 --> 1 --> [2]


----------------------------------------------------------------------


Id: 1
ExeStack:
 acquire(cnt)
(print(rHExp(v1)-1);release(cnt))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 1
Semaphore:
1 --> 1 --> [2]


----------------------------------------------------------------------


Id: 2
ExeStack:
 wHStmt(v1. rHExp(v1)*10)
(print(rHExp(v1));release(cnt))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 1
Semaphore:
1 --> 1 --> [2]


----------------------------------------------------------------------


Id: 3
ExeStack:
 acquire(cnt)
(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 1
Semaphore:
1 --> 1 --> [2]


----------------------------------------------------------------------


Id: 1
ExeStack:
 acquire(cnt)
(print(rHExp(v1)-1);release(cnt))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 1
Semaphore:
1 --> 1 --> [2]


----------------------------------------------------------------------


Id: 2
ExeStack:
 wHStmt(v1. rHExp(v1)*10)
(print(rHExp(v1));release(cnt))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 1
Semaphore:
1 --> 1 --> [2]


----------------------------------------------------------------------


Id: 3
ExeStack:
 acquire(cnt)
(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 1
Semaphore:
1 --> 1 --> [2]


----------------------------------------------------------------------


Id: 1
ExeStack:
 acquire(cnt)
(print(rHExp(v1)-1);release(cnt))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [2]


----------------------------------------------------------------------


Id: 2
ExeStack:
(print(rHExp(v1));release(cnt))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [2]


----------------------------------------------------------------------


Id: 3
ExeStack:
 acquire(cnt)
(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [2]


----------------------------------------------------------------------


Id: 1
ExeStack:
 acquire(cnt)
(print(rHExp(v1)-1);release(cnt))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [2]


----------------------------------------------------------------------


Id: 2
ExeStack:
(print(rHExp(v1));release(cnt))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [2]


----------------------------------------------------------------------


Id: 3
ExeStack:
 acquire(cnt)
(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [2]


----------------------------------------------------------------------


Id: 1
ExeStack:
 acquire(cnt)
(print(rHExp(v1)-1);release(cnt))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [2]


----------------------------------------------------------------------


Id: 2
ExeStack:
 print(rHExp(v1))
release(cnt)
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [2]


----------------------------------------------------------------------


Id: 3
ExeStack:
 acquire(cnt)
(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [2]


----------------------------------------------------------------------


Id: 1
ExeStack:
 acquire(cnt)
(print(rHExp(v1)-1);release(cnt))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [2]


----------------------------------------------------------------------


Id: 2
ExeStack:
 print(rHExp(v1))
release(cnt)
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [2]


----------------------------------------------------------------------


Id: 3
ExeStack:
 acquire(cnt)
(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))
SymTable:
cnt --> 1
v1 --> 1.int
Out:

FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [2]


----------------------------------------------------------------------


Id: 1
ExeStack:
 acquire(cnt)
(print(rHExp(v1)-1);release(cnt))
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [2]


----------------------------------------------------------------------


Id: 2
ExeStack:
release(cnt)
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [2]


----------------------------------------------------------------------


Id: 3
ExeStack:
 acquire(cnt)
(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [2]


----------------------------------------------------------------------


Id: 1
ExeStack:
 acquire(cnt)
(print(rHExp(v1)-1);release(cnt))
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [2]


----------------------------------------------------------------------


Id: 2
ExeStack:
release(cnt)
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [2]


----------------------------------------------------------------------


Id: 3
ExeStack:
 acquire(cnt)
(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [2]


----------------------------------------------------------------------


Id: 1
ExeStack:
 acquire(cnt)
(print(rHExp(v1)-1);release(cnt))
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> []


----------------------------------------------------------------------


Id: 2
ExeStack:

SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> []


----------------------------------------------------------------------


Id: 3
ExeStack:
 acquire(cnt)
(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> []


----------------------------------------------------------------------


Id: 1
ExeStack:
 acquire(cnt)
(print(rHExp(v1)-1);release(cnt))
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> []


----------------------------------------------------------------------


Id: 3
ExeStack:
 acquire(cnt)
(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> []


----------------------------------------------------------------------


Id: 1
ExeStack:
(print(rHExp(v1)-1);release(cnt))
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [1]


----------------------------------------------------------------------


Id: 3
ExeStack:
 acquire(cnt)
(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [1]


----------------------------------------------------------------------


Id: 1
ExeStack:
(print(rHExp(v1)-1);release(cnt))
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [1]


----------------------------------------------------------------------


Id: 3
ExeStack:
 acquire(cnt)
(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [1]


----------------------------------------------------------------------


Id: 1
ExeStack:
 print(rHExp(v1)-1)
release(cnt)
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [1]


----------------------------------------------------------------------


Id: 3
ExeStack:
 acquire(cnt)
(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [1]


----------------------------------------------------------------------


Id: 1
ExeStack:
 print(rHExp(v1)-1)
release(cnt)
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [1]


----------------------------------------------------------------------


Id: 3
ExeStack:
 acquire(cnt)
(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [1]


----------------------------------------------------------------------


Id: 1
ExeStack:
release(cnt)
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
9
FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [1]


----------------------------------------------------------------------


Id: 3
ExeStack:
 acquire(cnt)
(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
9
FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [1]


----------------------------------------------------------------------


Id: 1
ExeStack:
release(cnt)
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
9
FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [1]


----------------------------------------------------------------------


Id: 3
ExeStack:
 acquire(cnt)
(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
9
FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [1]


----------------------------------------------------------------------


Id: 1
ExeStack:

SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
9
FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [3]


----------------------------------------------------------------------


Id: 3
ExeStack:
(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
9
FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [3]


----------------------------------------------------------------------


Id: 3
ExeStack:
(wHStmt(v1. rHExp(v1)*10);(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt))))
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
9
FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [3]


----------------------------------------------------------------------


Id: 3
ExeStack:
 wHStmt(v1. rHExp(v1)*10)
(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt)))
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
9
FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [3]


----------------------------------------------------------------------


Id: 3
ExeStack:
 wHStmt(v1. rHExp(v1)*10)
(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt)))
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
9
FileTable:

Heap:
1 --> 10
Semaphore:
1 --> 1 --> [3]


----------------------------------------------------------------------


Id: 3
ExeStack:
(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt)))
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
9
FileTable:

Heap:
1 --> 100
Semaphore:
1 --> 1 --> [3]


----------------------------------------------------------------------


Id: 3
ExeStack:
(wHStmt(v1. rHExp(v1)*2);(print(rHExp(v1));release(cnt)))
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
9
FileTable:

Heap:
1 --> 100
Semaphore:
1 --> 1 --> [3]


----------------------------------------------------------------------


Id: 3
ExeStack:
 wHStmt(v1. rHExp(v1)*2)
(print(rHExp(v1));release(cnt))
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
9
FileTable:

Heap:
1 --> 100
Semaphore:
1 --> 1 --> [3]


----------------------------------------------------------------------


Id: 3
ExeStack:
 wHStmt(v1. rHExp(v1)*2)
(print(rHExp(v1));release(cnt))
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
9
FileTable:

Heap:
1 --> 100
Semaphore:
1 --> 1 --> [3]


----------------------------------------------------------------------


Id: 3
ExeStack:
(print(rHExp(v1));release(cnt))
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
9
FileTable:

Heap:
1 --> 200
Semaphore:
1 --> 1 --> [3]


----------------------------------------------------------------------


Id: 3
ExeStack:
(print(rHExp(v1));release(cnt))
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
9
FileTable:

Heap:
1 --> 200
Semaphore:
1 --> 1 --> [3]


----------------------------------------------------------------------


Id: 3
ExeStack:
 print(rHExp(v1))
release(cnt)
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
9
FileTable:

Heap:
1 --> 200
Semaphore:
1 --> 1 --> [3]


----------------------------------------------------------------------


Id: 3
ExeStack:
 print(rHExp(v1))
release(cnt)
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
9
FileTable:

Heap:
1 --> 200
Semaphore:
1 --> 1 --> [3]


----------------------------------------------------------------------


Id: 3
ExeStack:
release(cnt)
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
9
200
FileTable:

Heap:
1 --> 200
Semaphore:
1 --> 1 --> [3]


----------------------------------------------------------------------


Id: 3
ExeStack:
release(cnt)
SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
9
200
FileTable:

Heap:
1 --> 200
Semaphore:
1 --> 1 --> [3]


----------------------------------------------------------------------


Id: 3
ExeStack:

SymTable:
cnt --> 1
v1 --> 1.int
Out:
10
9
200
FileTable:

Heap:
1 --> 200
Semaphore:
1 --> 1 --> []


----------------------------------------------------------------------


